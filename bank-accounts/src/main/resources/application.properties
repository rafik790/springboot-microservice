spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.web-allow-others=true
#spring.h2.console.settings.web-allow-others=true
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
logging.file.name = ./log/demo-app.log

server.port=8080

spring.application.name=accounts
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8071/

management.endpoints.web.exposure.include=*

eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

## Configuring info endpoint
info.app.name=Accounts Microservice
info.app.description=Libanto Bank Accounts Application
info.app.version=1.0.0
management.info.env.enabled = true

endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

#Configuration for circuit breaker getCustomerDetailsCircuitBreaker
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.getCustomerDetailsCircuitBreaker.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.getCustomerDetailsCircuitBreaker.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.getCustomerDetailsCircuitBreaker.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.getCustomerDetailsCircuitBreaker.permittedNumberOfCallsInHalfOpenState=2

#Configuration for retry pattern
resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.getCustomerDetailsRetry.maxRetryAttempts=3
resilience4j.retry.instances.getCustomerDetailsRetry.waitDuration=2000

#Configure for reta limit pattern
resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
resilience4j.ratelimiter.instances.sayHello.timeoutDuration=5000
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.sayHello.limitForPeriod=1
